{"version":3,"sources":["LikeButton.js","Nasa.js","App.js","reportWebVitals.js","index.js"],"names":["LikeButton","useState","liked","setLiked","clicked","setClicked","onClick","class","Nasa","Data","setData","useEffect","axios","get","then","res","returnedData","data","i","length","map","space","title","date","src","url","alt","explanation","App","className","href","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAKaA,EAAa,WACtB,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAQA,OACI,wBACIC,QARR,WACIH,GAAUD,GACVG,GAAYD,IAKZ,SAGI,qBAAKG,MAAOL,EACR,yHACA,6HAFJ,SAGI,0C,iBCdHM,EAAO,WAEhB,MAAsBP,mBAAS,IAA/B,mBAAKQ,EAAL,KAAWC,EAAX,KAkBA,OAdAC,qBAAU,WACNC,IAAMC,IAHA,gGAGSC,MAAK,SAAAC,GAGhB,IAFA,IAAIC,EAAeD,EAAIE,KAEfC,EAAI,EAAGA,EAAIH,EAAIE,KAAKE,OAAQD,IAChCR,EACIM,QAMd,IAGF,8BACKP,EAAKW,KAAI,SAACC,GAAD,OACF,qBAAKd,MAAM,gDAAX,SACI,sBAAKA,MAAM,iGAAX,UACI,mBAAGA,MAAM,qBAAT,SAA+Bc,EAAMC,QACrC,4BAAID,EAAME,OACV,qBAAKC,IAAKH,EAAMI,IAAKC,IAAKL,EAAMC,MAAOf,MAAM,eAC7C,mBAAGA,MAAM,MAAT,SAAgBc,EAAMM,cACtB,cAAC,EAAD,eCXTC,MAtBf,WAME,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAItB,MAAM,iCAAV,0BACA,oBAAIA,MAAM,gCAAV,gDACA,sBAAKA,MAAM,4CAAX,UACE,wBAAQA,MAAM,4IAAd,SACE,mBAAGuB,KAAK,yCAAR,2BAEF,wBAAQvB,MAAM,6IACdD,QAbN,WACEyB,OAAOC,SAASC,QAAO,IAWnB,8BAGF,cAAC,EAAD,QCTSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.43ce89f1.chunk.js","sourcesContent":["// A reuseable Like button that allows users to like/unlike content\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nexport const LikeButton = () => {\r\n    const [liked, setLiked] = useState(false);\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    function clickHandler() {\r\n        setLiked(!liked);\r\n        setClicked(!clicked);\r\n\r\n    }\r\n\r\n    return (\r\n        <button\r\n            onClick={ clickHandler\r\n        }>\r\n            <div class={liked ? \r\n                \"relative bottom-5 bg-pink-500 text-white px-8 py-2.5 rounded-lg hover:bg-pink-600 transition-all ease-out duration-500\" :\r\n                \"relative bottom-5 bg-purple-500 text-white px-8 py-2.5 rounded-lg hover:bg-purple-600 transition-all ease-out duration-500\"}>\r\n                <p>Like</p>\r\n                \r\n            </div>\r\n        </button>\r\n    )\r\n}","// A reuseable card that calls Nasa's Image API and populates with image and details\r\n\r\nimport React,{useEffect,useState} from \"react\";\r\nimport { LikeButton } from \"./LikeButton\"\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const Nasa = () => {\r\n\r\n    let [Data, setData] = useState([])\r\n\r\n    var url = \"https://api.nasa.gov/planetary/apod?api_key=JEHTtbHQlMckm1abOtz0htptW3FRtjTWP40yz8Mg&count=5\"\r\n\r\n    useEffect(()=>{\r\n        axios.get(url).then(res => {\r\n            let returnedData = res.data;\r\n            \r\n            for(let i = 0; i < res.data.length; i++){\r\n                setData(\r\n                    returnedData\r\n                )\r\n            }\r\n            \r\n        })\r\n            \r\n    },[])\r\n\r\n    return(\r\n    <div>\r\n        {Data.map((space) => (\r\n                <div class=\"flex space-x-4 p-4 text-center justify-center\">\r\n                    <div class=\"w-1/2 h-1/3 shadow-md bg-gray-100 rounded-lg h-24 justify-between items-center hover:shadow-xl\">\r\n                        <p class=\"font-mono text-2xl\">{space.title}</p>\r\n                        <p>{space.date}</p>\r\n                        <img src={space.url} alt={space.title} class=\"p-5 w-full\"/>\r\n                        <p class=\"m-8\">{space.explanation}</p>\r\n                        <LikeButton />\r\n                    </div>\r\n                </div>  \r\n                )\r\n            )  \r\n        }\r\n    </div>)\r\n}","\nimport './App.css';\nimport { Nasa } from \"./Nasa\";\n\nfunction App() {\n\n  function reload() {\n    window.location.reload(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 class=\"font-mono text-6xl text-center\">Spacestagram</h1>\n      <h2 class=\"font-mono text-xl text-center\">Brought to you by Nasa's Image API</h2>\n      <div class=\"flex flex-row justify-center items-center\">\n        <button class=\"md:fixed md:left-5 md:top-5 bg-purple-500 text-white px-8 ml-5 py-2.5 rounded-lg hover:bg-purple-600 transition-all ease-out duration-500\">\n          <a href=\"https://brycepinder1989.myshopify.com/\">About Bryce</a>\n        </button>\n        <button class=\"md:fixed md:right-5 md:top-5 bg-purple-500 text-white px-8 ml-5 py-2.5 rounded-lg hover:bg-purple-600 transition-all ease-out duration-500\"\n        onClick={reload}>Reload Images</button>\n      </div>\n      <Nasa />\n    </div>\n  );\n}\n//\"fixed left-5 top-5 fixed right-5 top-5\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}